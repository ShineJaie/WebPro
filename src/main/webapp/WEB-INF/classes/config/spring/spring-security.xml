<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- 静态资源配置 -->
    <http pattern="/resource/**" security="none"/>
    <http pattern="/upload/**" security="none"/>

    <!-- enable use-expressions -->
    <http auto-config="true" use-expressions="true">

        <!-- 就近原则, 系统将使用第一个符合条件的intercept-url进行权限控制 -->
        <intercept-url pattern="/" access="permitAll"/>
        <!-- 任何用户都可以访问 -->
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/logout" access="permitAll"/>
        <intercept-url pattern="/admin**/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>

        <!-- access denied page -->
        <access-denied-handler error-page="/403"/>

        <form-login
                login-page="/login"
                default-target-url="/home"
                authentication-failure-url="/login?error"
                username-parameter="username"
                password-parameter="password"/>

        <logout logout-success-url="/login?logout"/>

    </http>


    <!-- Password Hashing Bean -->
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="12"/>
    </beans:bean>

    <!-- Select users and user_roles from database -->
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "select username, password, enable from users where username =?"
                               authorities-by-username-query=
                                       "select username, usergroupname as role from user2usergroup where username =?"/>

            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>

</beans:beans>